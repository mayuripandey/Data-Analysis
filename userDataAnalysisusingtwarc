{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Untitled20.ipynb",
      "provenance": [],
      "authorship_tag": "ABX9TyP66iTxFUs/BWCGOhlGFq3M",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/mayuripandey/Data-Analysis/blob/main/userDataAnalysisusingtwarc\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install twarc"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Lh88VRyQFgl_",
        "outputId": "2468f6d9-c0c9-426b-b305-13f027bb9d14"
      },
      "execution_count": 152,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: twarc in /usr/local/lib/python3.7/dist-packages (2.10.2)\n",
            "Requirement already satisfied: click-plugins>=1 in /usr/local/lib/python3.7/dist-packages (from twarc) (1.1.1)\n",
            "Requirement already satisfied: click<9,>=7 in /usr/local/lib/python3.7/dist-packages (from twarc) (7.1.2)\n",
            "Requirement already satisfied: humanize>=3.9 in /usr/local/lib/python3.7/dist-packages (from twarc) (4.0.0)\n",
            "Requirement already satisfied: click-config-file>=0.6 in /usr/local/lib/python3.7/dist-packages (from twarc) (0.6.0)\n",
            "Requirement already satisfied: python-dateutil>=2.8 in /usr/local/lib/python3.7/dist-packages (from twarc) (2.8.2)\n",
            "Requirement already satisfied: tqdm>=4.62 in /usr/local/lib/python3.7/dist-packages (from twarc) (4.63.0)\n",
            "Requirement already satisfied: requests-oauthlib>=1.3 in /usr/local/lib/python3.7/dist-packages (from twarc) (1.3.1)\n",
            "Requirement already satisfied: configobj>=5.0.6 in /usr/local/lib/python3.7/dist-packages (from click-config-file>=0.6->twarc) (5.0.6)\n",
            "Requirement already satisfied: six in /usr/local/lib/python3.7/dist-packages (from configobj>=5.0.6->click-config-file>=0.6->twarc) (1.15.0)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from humanize>=3.9->twarc) (4.11.3)\n",
            "Requirement already satisfied: requests>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=1.3->twarc) (2.23.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=1.3->twarc) (3.2.0)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc) (1.24.3)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc) (2.10)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc) (3.0.4)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc) (2021.10.8)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->humanize>=3.9->twarc) (3.10.0.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->humanize>=3.9->twarc) (3.7.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!twarc2 configure\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "z26arGGGFi4Z",
        "outputId": "0eaf9307-6155-4d81-cf53-c4fbe6286be5"
      },
      "execution_count": 153,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Please enter your Bearer Token (leave blank to skip to API key configuration): \n",
            "Please enter your API key: QsmNroZ5V6ghSPJ1TEGwMA2QR\n",
            "Please enter your API secret: E7lHrsHc0P3EU6MYSHdzpmSkqXMNzCJYf6Mk9veCmoEB78pgIg\n",
            "\n",
            "How would you like twarc to obtain your user keys?\n",
            "\n",
            "1) generate access keys by visiting Twitter\n",
            "2) manually enter your access token and secret\n",
            "\n",
            "Please enter your choice [1 or 2] 2\n",
            "Enter your Access Token: 3382755314-upIENhytORCLH3EKAQJl0GrHFbMXsfyHKfqlRna\n",
            "Enter your Access Token Secret:  5i4U55MU7dvwtCN5v8ZALik5XD4qZK3Jg8bkhFrVFhscu\n",
            "\u001b[32m\n",
            "Your keys have been written to /root/.config/twarc/config\u001b[0m\n",
            "\n",
            "\n",
            "✨ ✨ ✨  Happy twarcing! ✨ ✨ ✨\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!pip install twarc-csv\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "WFlflCRYowtT",
        "outputId": "3d8ab430-e160-450c-9c5b-8c9c490a3703"
      },
      "execution_count": 154,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Requirement already satisfied: twarc-csv in /usr/local/lib/python3.7/dist-packages (0.5.2)\n",
            "Requirement already satisfied: tqdm>=4.59.0 in /usr/local/lib/python3.7/dist-packages (from twarc-csv) (4.63.0)\n",
            "Requirement already satisfied: more-itertools>=8.7.0 in /usr/local/lib/python3.7/dist-packages (from twarc-csv) (8.12.0)\n",
            "Requirement already satisfied: twarc>=2.9.5 in /usr/local/lib/python3.7/dist-packages (from twarc-csv) (2.10.2)\n",
            "Requirement already satisfied: pandas>=1.2.5 in /usr/local/lib/python3.7/dist-packages (from twarc-csv) (1.3.5)\n",
            "Requirement already satisfied: numpy>=1.17.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.2.5->twarc-csv) (1.21.5)\n",
            "Requirement already satisfied: python-dateutil>=2.7.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.2.5->twarc-csv) (2.8.2)\n",
            "Requirement already satisfied: pytz>=2017.3 in /usr/local/lib/python3.7/dist-packages (from pandas>=1.2.5->twarc-csv) (2018.9)\n",
            "Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.7/dist-packages (from python-dateutil>=2.7.3->pandas>=1.2.5->twarc-csv) (1.15.0)\n",
            "Requirement already satisfied: click-config-file>=0.6 in /usr/local/lib/python3.7/dist-packages (from twarc>=2.9.5->twarc-csv) (0.6.0)\n",
            "Requirement already satisfied: click-plugins>=1 in /usr/local/lib/python3.7/dist-packages (from twarc>=2.9.5->twarc-csv) (1.1.1)\n",
            "Requirement already satisfied: humanize>=3.9 in /usr/local/lib/python3.7/dist-packages (from twarc>=2.9.5->twarc-csv) (4.0.0)\n",
            "Requirement already satisfied: requests-oauthlib>=1.3 in /usr/local/lib/python3.7/dist-packages (from twarc>=2.9.5->twarc-csv) (1.3.1)\n",
            "Requirement already satisfied: click<9,>=7 in /usr/local/lib/python3.7/dist-packages (from twarc>=2.9.5->twarc-csv) (7.1.2)\n",
            "Requirement already satisfied: configobj>=5.0.6 in /usr/local/lib/python3.7/dist-packages (from click-config-file>=0.6->twarc>=2.9.5->twarc-csv) (5.0.6)\n",
            "Requirement already satisfied: importlib-metadata in /usr/local/lib/python3.7/dist-packages (from humanize>=3.9->twarc>=2.9.5->twarc-csv) (4.11.3)\n",
            "Requirement already satisfied: requests>=2.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (2.23.0)\n",
            "Requirement already satisfied: oauthlib>=3.0.0 in /usr/local/lib/python3.7/dist-packages (from requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (3.2.0)\n",
            "Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (2.10)\n",
            "Requirement already satisfied: urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (1.24.3)\n",
            "Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (2021.10.8)\n",
            "Requirement already satisfied: chardet<4,>=3.0.2 in /usr/local/lib/python3.7/dist-packages (from requests>=2.0.0->requests-oauthlib>=1.3->twarc>=2.9.5->twarc-csv) (3.0.4)\n",
            "Requirement already satisfied: typing-extensions>=3.6.4 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->humanize>=3.9->twarc>=2.9.5->twarc-csv) (3.10.0.2)\n",
            "Requirement already satisfied: zipp>=0.5 in /usr/local/lib/python3.7/dist-packages (from importlib-metadata->humanize>=3.9->twarc>=2.9.5->twarc-csv) (3.7.0)\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!twarc2 timeline --limit 10000 OlafScholz  mayuri.jsonl"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ZdPntVPRkLjM",
        "outputId": "b1c34b9e-ef22-4c97-db50-a4bde802694f"
      },
      "execution_count": 155,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "API limit of 3200 reached:  49% 3204/6556 [00:27<00:28, 117.10it/s]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!twarc2 csv mayuri.jsonl mayuri.csv --output-columns \"text,created_at,author.id,author.public_metrics.tweet_count,author.public_metrics.following_count,author.public_metrics.followers_count,public_metrics.like_count,public_metrics.retweet_count\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TzpriQ7D-NW-",
        "outputId": "87e0c2e9-04ac-48b0-e762-79276575f1ad"
      },
      "execution_count": 11,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100% 6.76M/6.76M [00:01<00:00, 4.02MB/s]\n",
            "\n",
            "ℹ️\n",
            "Parsed 3204 tweets objects from 33 lines in the input file.\n",
            "Wrote 3204 rows and output 8 of 74 input columns in the CSV.\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        ""
      ],
      "metadata": {
        "id": "kP1yk5PAk1V8"
      },
      "execution_count": 5,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df= pd.read_csv('mayuri.csv',parse_dates=['created_at'])"
      ],
      "metadata": {
        "id": "bw6gODNT-ZHe"
      },
      "execution_count": 128,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "04QLhUKo-sZG",
        "outputId": "51d95d11-e54b-4390-8003-e226af360637"
      },
      "execution_count": 129,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                   text  \\\n",
              "0     Der russische Präsident hat sich verrechnet – ...   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "2     Ich verlange, dass internationale Organisation...   \n",
              "3     Die steigenden Energiepreise sind auch für die...   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "...                                                 ...   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "\n",
              "                    created_at  author.id  author.public_metrics.tweet_count  \\\n",
              "0    2022-04-06 15:56:19+00:00   38150247                               6556   \n",
              "1    2022-04-03 21:47:20+00:00   38150247                               6556   \n",
              "2    2022-04-03 21:47:14+00:00   38150247                               6556   \n",
              "3    2022-04-02 15:10:11+00:00   38150247                               6556   \n",
              "4    2022-04-02 14:46:20+00:00   38150247                               6556   \n",
              "...                        ...        ...                                ...   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247                               6556   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247                               6556   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247                               6556   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247                               6556   \n",
              "3203 2018-01-18 11:33:26+00:00   38150247                               6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "0                                      1443   \n",
              "1                                      1443   \n",
              "2                                      1443   \n",
              "3                                      1443   \n",
              "4                                      1443   \n",
              "...                                     ...   \n",
              "3199                                   1443   \n",
              "3200                                   1443   \n",
              "3201                                   1443   \n",
              "3202                                   1443   \n",
              "3203                                   1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "0                                    522466                       1631   \n",
              "1                                    522466                       8415   \n",
              "2                                    522466                       7574   \n",
              "3                                    522466                       2152   \n",
              "4                                    522466                        355   \n",
              "...                                     ...                        ...   \n",
              "3199                                 522466                          2   \n",
              "3200                                 522466                         35   \n",
              "3201                                 522466                         18   \n",
              "3202                                 522466                          6   \n",
              "3203                                 522466                        206   \n",
              "\n",
              "      public_metrics.retweet_count  \n",
              "0                              214  \n",
              "1                             1130  \n",
              "2                              704  \n",
              "3                              185  \n",
              "4                               39  \n",
              "...                            ...  \n",
              "3199                             2  \n",
              "3200                            11  \n",
              "3201                            10  \n",
              "3202                             3  \n",
              "3203                            16  \n",
              "\n",
              "[3204 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-56b075d7-585e-4852-91f2-54645dfa25fe\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>created_at</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-56b075d7-585e-4852-91f2-54645dfa25fe')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-56b075d7-585e-4852-91f2-54645dfa25fe button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-56b075d7-585e-4852-91f2-54645dfa25fe');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 129
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ug2408aquXY4",
        "outputId": "b54aea36-46b4-409b-df91-255c68b59d21"
      },
      "execution_count": 130,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3204 entries, 0 to 3203\n",
            "Data columns (total 8 columns):\n",
            " #   Column                                 Non-Null Count  Dtype              \n",
            "---  ------                                 --------------  -----              \n",
            " 0   text                                   3204 non-null   object             \n",
            " 1   created_at                             3204 non-null   datetime64[ns, UTC]\n",
            " 2   author.id                              3204 non-null   int64              \n",
            " 3   author.public_metrics.tweet_count      3204 non-null   int64              \n",
            " 4   author.public_metrics.following_count  3204 non-null   int64              \n",
            " 5   author.public_metrics.followers_count  3204 non-null   int64              \n",
            " 6   public_metrics.like_count              3204 non-null   int64              \n",
            " 7   public_metrics.retweet_count           3204 non-null   int64              \n",
            "dtypes: datetime64[ns, UTC](1), int64(6), object(1)\n",
            "memory usage: 200.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.sort_values(by=\"created_at\")"
      ],
      "metadata": {
        "id": "Y8AMrtKchRjJ"
      },
      "execution_count": 131,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "bYE18wDVhVmO",
        "outputId": "fd93cf0b-5b57-4cae-e858-c4a24343dbc9"
      },
      "execution_count": 132,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                   text  \\\n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "...                                                 ...   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "3     Die steigenden Energiepreise sind auch für die...   \n",
              "2     Ich verlange, dass internationale Organisation...   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "0     Der russische Präsident hat sich verrechnet – ...   \n",
              "\n",
              "                    created_at  author.id  author.public_metrics.tweet_count  \\\n",
              "3203 2018-01-18 11:33:26+00:00   38150247                               6556   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247                               6556   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247                               6556   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247                               6556   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247                               6556   \n",
              "...                        ...        ...                                ...   \n",
              "4    2022-04-02 14:46:20+00:00   38150247                               6556   \n",
              "3    2022-04-02 15:10:11+00:00   38150247                               6556   \n",
              "2    2022-04-03 21:47:14+00:00   38150247                               6556   \n",
              "1    2022-04-03 21:47:20+00:00   38150247                               6556   \n",
              "0    2022-04-06 15:56:19+00:00   38150247                               6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "3203                                   1443   \n",
              "3202                                   1443   \n",
              "3201                                   1443   \n",
              "3200                                   1443   \n",
              "3199                                   1443   \n",
              "...                                     ...   \n",
              "4                                      1443   \n",
              "3                                      1443   \n",
              "2                                      1443   \n",
              "1                                      1443   \n",
              "0                                      1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "3203                                 522466                        206   \n",
              "3202                                 522466                          6   \n",
              "3201                                 522466                         18   \n",
              "3200                                 522466                         35   \n",
              "3199                                 522466                          2   \n",
              "...                                     ...                        ...   \n",
              "4                                    522466                        355   \n",
              "3                                    522466                       2152   \n",
              "2                                    522466                       7574   \n",
              "1                                    522466                       8415   \n",
              "0                                    522466                       1631   \n",
              "\n",
              "      public_metrics.retweet_count  \n",
              "3203                            16  \n",
              "3202                             3  \n",
              "3201                            10  \n",
              "3200                            11  \n",
              "3199                             2  \n",
              "...                            ...  \n",
              "4                               39  \n",
              "3                              185  \n",
              "2                              704  \n",
              "1                             1130  \n",
              "0                              214  \n",
              "\n",
              "[3204 rows x 8 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-f93f4df3-f828-4fb2-963d-74ddba57c174\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>created_at</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 8 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-f93f4df3-f828-4fb2-963d-74ddba57c174')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-f93f4df3-f828-4fb2-963d-74ddba57c174 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-f93f4df3-f828-4fb2-963d-74ddba57c174');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 132
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "jbuqIFiYomjx",
        "outputId": "4564b349-b354-4be8-8792-32df3948bdeb"
      },
      "execution_count": 133,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 3204 entries, 3203 to 0\n",
            "Data columns (total 8 columns):\n",
            " #   Column                                 Non-Null Count  Dtype              \n",
            "---  ------                                 --------------  -----              \n",
            " 0   text                                   3204 non-null   object             \n",
            " 1   created_at                             3204 non-null   datetime64[ns, UTC]\n",
            " 2   author.id                              3204 non-null   int64              \n",
            " 3   author.public_metrics.tweet_count      3204 non-null   int64              \n",
            " 4   author.public_metrics.following_count  3204 non-null   int64              \n",
            " 5   author.public_metrics.followers_count  3204 non-null   int64              \n",
            " 6   public_metrics.like_count              3204 non-null   int64              \n",
            " 7   public_metrics.retweet_count           3204 non-null   int64              \n",
            "dtypes: datetime64[ns, UTC](1), int64(6), object(1)\n",
            "memory usage: 225.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_time = df.copy()"
      ],
      "metadata": {
        "id": "ZXU3k6IxFqC4"
      },
      "execution_count": 134,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# set the timestamp column as the index and delete the column\n",
        "df_time.index = df_time['created_at']\n",
        "del df_time['created_at']"
      ],
      "metadata": {
        "id": "M_uExclxFtxC"
      },
      "execution_count": 135,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_time.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "v09MQQgTFxHH",
        "outputId": "df094e8a-38f0-48bd-8032-5840c0d6ef65"
      },
      "execution_count": 136,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                                        text  \\\n",
              "created_at                                                                     \n",
              "2018-01-18 11:33:26+00:00  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "2018-01-18 17:28:45+00:00  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "2018-01-19 10:09:16+00:00  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "2018-01-19 16:27:11+00:00  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "2018-01-19 17:38:58+00:00  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "\n",
              "                           author.id  author.public_metrics.tweet_count  \\\n",
              "created_at                                                                \n",
              "2018-01-18 11:33:26+00:00   38150247                               6556   \n",
              "2018-01-18 17:28:45+00:00   38150247                               6556   \n",
              "2018-01-19 10:09:16+00:00   38150247                               6556   \n",
              "2018-01-19 16:27:11+00:00   38150247                               6556   \n",
              "2018-01-19 17:38:58+00:00   38150247                               6556   \n",
              "\n",
              "                           author.public_metrics.following_count  \\\n",
              "created_at                                                         \n",
              "2018-01-18 11:33:26+00:00                                   1443   \n",
              "2018-01-18 17:28:45+00:00                                   1443   \n",
              "2018-01-19 10:09:16+00:00                                   1443   \n",
              "2018-01-19 16:27:11+00:00                                   1443   \n",
              "2018-01-19 17:38:58+00:00                                   1443   \n",
              "\n",
              "                           author.public_metrics.followers_count  \\\n",
              "created_at                                                         \n",
              "2018-01-18 11:33:26+00:00                                 522466   \n",
              "2018-01-18 17:28:45+00:00                                 522466   \n",
              "2018-01-19 10:09:16+00:00                                 522466   \n",
              "2018-01-19 16:27:11+00:00                                 522466   \n",
              "2018-01-19 17:38:58+00:00                                 522466   \n",
              "\n",
              "                           public_metrics.like_count  \\\n",
              "created_at                                             \n",
              "2018-01-18 11:33:26+00:00                        206   \n",
              "2018-01-18 17:28:45+00:00                          6   \n",
              "2018-01-19 10:09:16+00:00                         18   \n",
              "2018-01-19 16:27:11+00:00                         35   \n",
              "2018-01-19 17:38:58+00:00                          2   \n",
              "\n",
              "                           public_metrics.retweet_count  \n",
              "created_at                                               \n",
              "2018-01-18 11:33:26+00:00                            16  \n",
              "2018-01-18 17:28:45+00:00                             3  \n",
              "2018-01-19 10:09:16+00:00                            10  \n",
              "2018-01-19 16:27:11+00:00                            11  \n",
              "2018-01-19 17:38:58+00:00                             2  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a6e1d741-6809-42d3-9b06-6c8b80086505\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>created_at</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-01-18 11:33:26+00:00</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-18 17:28:45+00:00</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19 10:09:16+00:00</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19 16:27:11+00:00</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19 17:38:58+00:00</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a6e1d741-6809-42d3-9b06-6c8b80086505')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a6e1d741-6809-42d3-9b06-6c8b80086505 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a6e1d741-6809-42d3-9b06-6c8b80086505');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 136
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_time.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "Ed_2ljjgMgkF",
        "outputId": "b6f6add6-b50e-4e4b-aa4d-facb731300bb"
      },
      "execution_count": 137,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 3204 entries, 2018-01-18 11:33:26+00:00 to 2022-04-06 15:56:19+00:00\n",
            "Data columns (total 7 columns):\n",
            " #   Column                                 Non-Null Count  Dtype \n",
            "---  ------                                 --------------  ----- \n",
            " 0   text                                   3204 non-null   object\n",
            " 1   author.id                              3204 non-null   int64 \n",
            " 2   author.public_metrics.tweet_count      3204 non-null   int64 \n",
            " 3   author.public_metrics.following_count  3204 non-null   int64 \n",
            " 4   author.public_metrics.followers_count  3204 non-null   int64 \n",
            " 5   public_metrics.like_count              3204 non-null   int64 \n",
            " 6   public_metrics.retweet_count           3204 non-null   int64 \n",
            "dtypes: int64(6), object(1)\n",
            "memory usage: 200.2+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['date'] = pd.DatetimeIndex(df['created_at']).date\n",
        "df['month']= pd.DatetimeIndex(df['created_at']).month\n",
        "df['Weekday']=pd.DatetimeIndex(df['created_at']).weekday\n",
        "df['Weekdayname']=pd.DatetimeIndex(df['created_at']).day_name()\n",
        "df['count'] = 1\n",
        "df_filtered = df[['date', 'count','month','Weekday','Weekdayname']]\n",
        "df_filtered.head(5)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 206
        },
        "id": "YXfRk9ViF3Gj",
        "outputId": "e29ae7fd-e240-4393-e0b5-ede1122bdfa6"
      },
      "execution_count": 139,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "            date  count  month  Weekday Weekdayname\n",
              "3203  2018-01-18      1      1        3    Thursday\n",
              "3202  2018-01-18      1      1        3    Thursday\n",
              "3201  2018-01-19      1      1        4      Friday\n",
              "3200  2018-01-19      1      1        4      Friday\n",
              "3199  2018-01-19      1      1        4      Friday"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-121ce59f-568b-4933-a265-c850b0152976\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>count</th>\n",
              "      <th>month</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>Weekdayname</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-121ce59f-568b-4933-a265-c850b0152976')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-121ce59f-568b-4933-a265-c850b0152976 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-121ce59f-568b-4933-a265-c850b0152976');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 139
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "_NZSzINMMQTi",
        "outputId": "b11ebafd-4b86-44bc-a03f-c2357980d01d"
      },
      "execution_count": 140,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                   text  \\\n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "...                                                 ...   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "3     Die steigenden Energiepreise sind auch für die...   \n",
              "2     Ich verlange, dass internationale Organisation...   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "0     Der russische Präsident hat sich verrechnet – ...   \n",
              "\n",
              "                    created_at  author.id  author.public_metrics.tweet_count  \\\n",
              "3203 2018-01-18 11:33:26+00:00   38150247                               6556   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247                               6556   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247                               6556   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247                               6556   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247                               6556   \n",
              "...                        ...        ...                                ...   \n",
              "4    2022-04-02 14:46:20+00:00   38150247                               6556   \n",
              "3    2022-04-02 15:10:11+00:00   38150247                               6556   \n",
              "2    2022-04-03 21:47:14+00:00   38150247                               6556   \n",
              "1    2022-04-03 21:47:20+00:00   38150247                               6556   \n",
              "0    2022-04-06 15:56:19+00:00   38150247                               6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "3203                                   1443   \n",
              "3202                                   1443   \n",
              "3201                                   1443   \n",
              "3200                                   1443   \n",
              "3199                                   1443   \n",
              "...                                     ...   \n",
              "4                                      1443   \n",
              "3                                      1443   \n",
              "2                                      1443   \n",
              "1                                      1443   \n",
              "0                                      1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "3203                                 522466                        206   \n",
              "3202                                 522466                          6   \n",
              "3201                                 522466                         18   \n",
              "3200                                 522466                         35   \n",
              "3199                                 522466                          2   \n",
              "...                                     ...                        ...   \n",
              "4                                    522466                        355   \n",
              "3                                    522466                       2152   \n",
              "2                                    522466                       7574   \n",
              "1                                    522466                       8415   \n",
              "0                                    522466                       1631   \n",
              "\n",
              "      public_metrics.retweet_count        date  month  Weekday Weekdayname  \\\n",
              "3203                            16  2018-01-18      1        3    Thursday   \n",
              "3202                             3  2018-01-18      1        3    Thursday   \n",
              "3201                            10  2018-01-19      1        4      Friday   \n",
              "3200                            11  2018-01-19      1        4      Friday   \n",
              "3199                             2  2018-01-19      1        4      Friday   \n",
              "...                            ...         ...    ...      ...         ...   \n",
              "4                               39  2022-04-02      4        5    Saturday   \n",
              "3                              185  2022-04-02      4        5    Saturday   \n",
              "2                              704  2022-04-03      4        6      Sunday   \n",
              "1                             1130  2022-04-03      4        6      Sunday   \n",
              "0                              214  2022-04-06      4        2   Wednesday   \n",
              "\n",
              "      count  \n",
              "3203      1  \n",
              "3202      1  \n",
              "3201      1  \n",
              "3200      1  \n",
              "3199      1  \n",
              "...     ...  \n",
              "4         1  \n",
              "3         1  \n",
              "2         1  \n",
              "1         1  \n",
              "0         1  \n",
              "\n",
              "[3204 rows x 13 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b8d83454-4797-4c9c-9691-b27d727ddf55\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>created_at</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>Weekdayname</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "      <td>2022-04-06</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 13 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b8d83454-4797-4c9c-9691-b27d727ddf55')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b8d83454-4797-4c9c-9691-b27d727ddf55 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b8d83454-4797-4c9c-9691-b27d727ddf55');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 140
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "GjHHLZIMMXc7",
        "outputId": "8b06feee-b8ff-402a-e89c-2684800f7bb2"
      },
      "execution_count": 141,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "Int64Index: 3204 entries, 3203 to 0\n",
            "Data columns (total 13 columns):\n",
            " #   Column                                 Non-Null Count  Dtype              \n",
            "---  ------                                 --------------  -----              \n",
            " 0   text                                   3204 non-null   object             \n",
            " 1   created_at                             3204 non-null   datetime64[ns, UTC]\n",
            " 2   author.id                              3204 non-null   int64              \n",
            " 3   author.public_metrics.tweet_count      3204 non-null   int64              \n",
            " 4   author.public_metrics.following_count  3204 non-null   int64              \n",
            " 5   author.public_metrics.followers_count  3204 non-null   int64              \n",
            " 6   public_metrics.like_count              3204 non-null   int64              \n",
            " 7   public_metrics.retweet_count           3204 non-null   int64              \n",
            " 8   date                                   3204 non-null   object             \n",
            " 9   month                                  3204 non-null   int64              \n",
            " 10  Weekday                                3204 non-null   int64              \n",
            " 11  Weekdayname                            3204 non-null   object             \n",
            " 12  count                                  3204 non-null   int64              \n",
            "dtypes: datetime64[ns, UTC](1), int64(9), object(3)\n",
            "memory usage: 350.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.drop('created_at', 1)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "UrueOp33MY1S",
        "outputId": "9cb6b62a-8d75-4470-89c6-fae748187849"
      },
      "execution_count": 142,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning:\n",
            "\n",
            "In a future version of pandas all arguments of DataFrame.drop except for the argument 'labels' will be keyword-only\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "sDuJQ6iAMgjB",
        "outputId": "51286d27-d89e-40ce-dd10-d9d9ad3ff09f"
      },
      "execution_count": 143,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                   text  author.id  \\\n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   38150247   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...   38150247   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...   38150247   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...   38150247   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   38150247   \n",
              "...                                                 ...        ...   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...   38150247   \n",
              "3     Die steigenden Energiepreise sind auch für die...   38150247   \n",
              "2     Ich verlange, dass internationale Organisation...   38150247   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...   38150247   \n",
              "0     Der russische Präsident hat sich verrechnet – ...   38150247   \n",
              "\n",
              "      author.public_metrics.tweet_count  \\\n",
              "3203                               6556   \n",
              "3202                               6556   \n",
              "3201                               6556   \n",
              "3200                               6556   \n",
              "3199                               6556   \n",
              "...                                 ...   \n",
              "4                                  6556   \n",
              "3                                  6556   \n",
              "2                                  6556   \n",
              "1                                  6556   \n",
              "0                                  6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "3203                                   1443   \n",
              "3202                                   1443   \n",
              "3201                                   1443   \n",
              "3200                                   1443   \n",
              "3199                                   1443   \n",
              "...                                     ...   \n",
              "4                                      1443   \n",
              "3                                      1443   \n",
              "2                                      1443   \n",
              "1                                      1443   \n",
              "0                                      1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "3203                                 522466                        206   \n",
              "3202                                 522466                          6   \n",
              "3201                                 522466                         18   \n",
              "3200                                 522466                         35   \n",
              "3199                                 522466                          2   \n",
              "...                                     ...                        ...   \n",
              "4                                    522466                        355   \n",
              "3                                    522466                       2152   \n",
              "2                                    522466                       7574   \n",
              "1                                    522466                       8415   \n",
              "0                                    522466                       1631   \n",
              "\n",
              "      public_metrics.retweet_count        date  month  Weekday Weekdayname  \\\n",
              "3203                            16  2018-01-18      1        3    Thursday   \n",
              "3202                             3  2018-01-18      1        3    Thursday   \n",
              "3201                            10  2018-01-19      1        4      Friday   \n",
              "3200                            11  2018-01-19      1        4      Friday   \n",
              "3199                             2  2018-01-19      1        4      Friday   \n",
              "...                            ...         ...    ...      ...         ...   \n",
              "4                               39  2022-04-02      4        5    Saturday   \n",
              "3                              185  2022-04-02      4        5    Saturday   \n",
              "2                              704  2022-04-03      4        6      Sunday   \n",
              "1                             1130  2022-04-03      4        6      Sunday   \n",
              "0                              214  2022-04-06      4        2   Wednesday   \n",
              "\n",
              "      count  \n",
              "3203      1  \n",
              "3202      1  \n",
              "3201      1  \n",
              "3200      1  \n",
              "3199      1  \n",
              "...     ...  \n",
              "4         1  \n",
              "3         1  \n",
              "2         1  \n",
              "1         1  \n",
              "0         1  \n",
              "\n",
              "[3204 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-83b16a14-abe6-4c6f-a232-2306fe4e52df\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>Weekdayname</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "      <td>2022-04-06</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-83b16a14-abe6-4c6f-a232-2306fe4e52df')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-83b16a14-abe6-4c6f-a232-2306fe4e52df button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-83b16a14-abe6-4c6f-a232-2306fe4e52df');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 143
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_time = df.copy()"
      ],
      "metadata": {
        "id": "quwz1BhmMkhp"
      },
      "execution_count": 144,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_time.index = df_time['date']"
      ],
      "metadata": {
        "id": "b1Umctt4Mlj6"
      },
      "execution_count": 145,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "del df_time['date']"
      ],
      "metadata": {
        "id": "lTch_1izMo2p"
      },
      "execution_count": 146,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_time.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 406
        },
        "id": "PS9IdHX3Mbs4",
        "outputId": "4be59d3d-18bc-4a3f-a9d5-17d9bae3ad41"
      },
      "execution_count": 147,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                         text  author.id  \\\n",
              "date                                                                       \n",
              "2018-01-18  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   38150247   \n",
              "2018-01-18  Bürgermeister @OlafScholz besucht Müllverwertu...   38150247   \n",
              "2018-01-19  Impressed by #Hamburg and @olafscholz ambition...   38150247   \n",
              "2018-01-19  Heute waren Berlins Regierender Bürgermeister ...   38150247   \n",
              "2018-01-19  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   38150247   \n",
              "\n",
              "            author.public_metrics.tweet_count  \\\n",
              "date                                            \n",
              "2018-01-18                               6556   \n",
              "2018-01-18                               6556   \n",
              "2018-01-19                               6556   \n",
              "2018-01-19                               6556   \n",
              "2018-01-19                               6556   \n",
              "\n",
              "            author.public_metrics.following_count  \\\n",
              "date                                                \n",
              "2018-01-18                                   1443   \n",
              "2018-01-18                                   1443   \n",
              "2018-01-19                                   1443   \n",
              "2018-01-19                                   1443   \n",
              "2018-01-19                                   1443   \n",
              "\n",
              "            author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "date                                                                           \n",
              "2018-01-18                                 522466                        206   \n",
              "2018-01-18                                 522466                          6   \n",
              "2018-01-19                                 522466                         18   \n",
              "2018-01-19                                 522466                         35   \n",
              "2018-01-19                                 522466                          2   \n",
              "\n",
              "            public_metrics.retweet_count  month  Weekday Weekdayname  count  \n",
              "date                                                                         \n",
              "2018-01-18                            16      1        3    Thursday      1  \n",
              "2018-01-18                             3      1        3    Thursday      1  \n",
              "2018-01-19                            10      1        4      Friday      1  \n",
              "2018-01-19                            11      1        4      Friday      1  \n",
              "2018-01-19                             2      1        4      Friday      1  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a3a59cef-63cc-43e4-aa50-5c718e5f85a6\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "      <th>month</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>Weekdayname</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>date</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-01-18</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-18</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2018-01-19</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a3a59cef-63cc-43e4-aa50-5c718e5f85a6')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a3a59cef-63cc-43e4-aa50-5c718e5f85a6 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a3a59cef-63cc-43e4-aa50-5c718e5f85a6');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 147
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df = df.sort_values(by=\"date\")\n"
      ],
      "metadata": {
        "id": "_hGU6G4CMwF6"
      },
      "execution_count": 148,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "PbaRIwOQMxTJ",
        "outputId": "819396bd-ca79-4243-d58e-acb443d9afdb"
      },
      "execution_count": 149,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                                   text  author.id  \\\n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   38150247   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...   38150247   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...   38150247   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...   38150247   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   38150247   \n",
              "...                                                 ...        ...   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...   38150247   \n",
              "3     Die steigenden Energiepreise sind auch für die...   38150247   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...   38150247   \n",
              "2     Ich verlange, dass internationale Organisation...   38150247   \n",
              "0     Der russische Präsident hat sich verrechnet – ...   38150247   \n",
              "\n",
              "      author.public_metrics.tweet_count  \\\n",
              "3203                               6556   \n",
              "3202                               6556   \n",
              "3201                               6556   \n",
              "3200                               6556   \n",
              "3199                               6556   \n",
              "...                                 ...   \n",
              "4                                  6556   \n",
              "3                                  6556   \n",
              "1                                  6556   \n",
              "2                                  6556   \n",
              "0                                  6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "3203                                   1443   \n",
              "3202                                   1443   \n",
              "3201                                   1443   \n",
              "3200                                   1443   \n",
              "3199                                   1443   \n",
              "...                                     ...   \n",
              "4                                      1443   \n",
              "3                                      1443   \n",
              "1                                      1443   \n",
              "2                                      1443   \n",
              "0                                      1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "3203                                 522466                        206   \n",
              "3202                                 522466                          6   \n",
              "3201                                 522466                         18   \n",
              "3200                                 522466                         35   \n",
              "3199                                 522466                          2   \n",
              "...                                     ...                        ...   \n",
              "4                                    522466                        355   \n",
              "3                                    522466                       2152   \n",
              "1                                    522466                       8415   \n",
              "2                                    522466                       7574   \n",
              "0                                    522466                       1631   \n",
              "\n",
              "      public_metrics.retweet_count        date  month  Weekday Weekdayname  \\\n",
              "3203                            16  2018-01-18      1        3    Thursday   \n",
              "3202                             3  2018-01-18      1        3    Thursday   \n",
              "3201                            10  2018-01-19      1        4      Friday   \n",
              "3200                            11  2018-01-19      1        4      Friday   \n",
              "3199                             2  2018-01-19      1        4      Friday   \n",
              "...                            ...         ...    ...      ...         ...   \n",
              "4                               39  2022-04-02      4        5    Saturday   \n",
              "3                              185  2022-04-02      4        5    Saturday   \n",
              "1                             1130  2022-04-03      4        6      Sunday   \n",
              "2                              704  2022-04-03      4        6      Sunday   \n",
              "0                              214  2022-04-06      4        2   Wednesday   \n",
              "\n",
              "      count  \n",
              "3203      1  \n",
              "3202      1  \n",
              "3201      1  \n",
              "3200      1  \n",
              "3199      1  \n",
              "...     ...  \n",
              "4         1  \n",
              "3         1  \n",
              "1         1  \n",
              "2         1  \n",
              "0         1  \n",
              "\n",
              "[3204 rows x 12 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-a520c75c-316d-4bf1-9220-2fb56fb83c3d\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>text</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "      <th>date</th>\n",
              "      <th>month</th>\n",
              "      <th>Weekday</th>\n",
              "      <th>Weekdayname</th>\n",
              "      <th>count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>2018-01-18</td>\n",
              "      <td>1</td>\n",
              "      <td>3</td>\n",
              "      <td>Thursday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>2018-01-19</td>\n",
              "      <td>1</td>\n",
              "      <td>4</td>\n",
              "      <td>Friday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "      <td>2022-04-02</td>\n",
              "      <td>4</td>\n",
              "      <td>5</td>\n",
              "      <td>Saturday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "      <td>2022-04-03</td>\n",
              "      <td>4</td>\n",
              "      <td>6</td>\n",
              "      <td>Sunday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "      <td>2022-04-06</td>\n",
              "      <td>4</td>\n",
              "      <td>2</td>\n",
              "      <td>Wednesday</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 12 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-a520c75c-316d-4bf1-9220-2fb56fb83c3d')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-a520c75c-316d-4bf1-9220-2fb56fb83c3d button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-a520c75c-316d-4bf1-9220-2fb56fb83c3d');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 149
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['date'] = pd.to_datetime(df['date'])\n",
        "df = df.set_index('date') \n",
        "timestamp = (df!=0).resample('AS').sum()"
      ],
      "metadata": {
        "id": "xdTFhfwJM1XX"
      },
      "execution_count": 150,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "qPBFzvcmM3fi",
        "outputId": "101a86e6-a1e9-4bdb-a4ff-492d32bb41cc"
      },
      "execution_count": 122,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       id                                               text  \\\n",
              "0     1511734556621217792  Der russische Präsident hat sich verrechnet – ...   \n",
              "1     1510735727587377156  Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "2     1510735703139053568  Ich verlange, dass internationale Organisation...   \n",
              "3     1510273394448732161  Die steigenden Energiepreise sind auch für die...   \n",
              "4     1510267392257056777  Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "...                   ...                                                ...   \n",
              "3199   954407851425968128  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "3200   954389784729878528  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3201   954294681172611074  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3202   954042890493276167  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3203   953953476056403968  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "\n",
              "                          Date  author.id  status  following  follower  Likes  \\\n",
              "0    2022-04-06 15:56:19+00:00   38150247    6556       1443    522466   1631   \n",
              "1    2022-04-03 21:47:20+00:00   38150247    6556       1443    522466   8415   \n",
              "2    2022-04-03 21:47:14+00:00   38150247    6556       1443    522466   7574   \n",
              "3    2022-04-02 15:10:11+00:00   38150247    6556       1443    522466   2152   \n",
              "4    2022-04-02 14:46:20+00:00   38150247    6556       1443    522466    355   \n",
              "...                        ...        ...     ...        ...       ...    ...   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247    6556       1443    522466      2   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247    6556       1443    522466     35   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247    6556       1443    522466     18   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247    6556       1443    522466      6   \n",
              "3203 2018-01-18 11:33:26+00:00   38150247    6556       1443    522466    206   \n",
              "\n",
              "      Retweets  sentiment  \n",
              "0          214          0  \n",
              "1         1130          0  \n",
              "2          704          0  \n",
              "3          185          0  \n",
              "4           39          0  \n",
              "...        ...        ...  \n",
              "3199         2          0  \n",
              "3200        11          0  \n",
              "3201        10          1  \n",
              "3202         3          0  \n",
              "3203        16          0  \n",
              "\n",
              "[3204 rows x 10 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-e1d10839-80bd-43c1-97aa-cd2bebe682d9\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>text</th>\n",
              "      <th>Date</th>\n",
              "      <th>author.id</th>\n",
              "      <th>status</th>\n",
              "      <th>following</th>\n",
              "      <th>follower</th>\n",
              "      <th>Likes</th>\n",
              "      <th>Retweets</th>\n",
              "      <th>sentiment</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1511734556621217792</td>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1510735727587377156</td>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1510735703139053568</td>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1510273394448732161</td>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1510267392257056777</td>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>954407851425968128</td>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>954389784729878528</td>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>954294681172611074</td>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>954042890493276167</td>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>953953476056403968</td>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 10 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e1d10839-80bd-43c1-97aa-cd2bebe682d9')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-e1d10839-80bd-43c1-97aa-cd2bebe682d9 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-e1d10839-80bd-43c1-97aa-cd2bebe682d9');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 122
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Total twitter account in 2022:', df['2022']['author.id'].count())"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "gTHJeZlyM9y6",
        "outputId": "ef21815d-231a-44b1-9565-7e45aede9140"
      },
      "execution_count": 151,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total twitter account in 2022: 72\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning:\n",
            "\n",
            "Indexing a DataFrame with a datetimelike index using a single string to slice the rows, like `frame[string]`, is deprecated and will be removed in a future version. Use `frame.loc[string]` instead.\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n"
      ],
      "metadata": {
        "id": "gwnxcdUSszSU"
      },
      "execution_count": 40,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "fig, ax = plt.subplots(figsize=(12,6))\n",
        "yearly_tweets = df.resample('Y')['text'].count()\n",
        "yearly_tweets.index = yearly_tweets.index.year\n",
        "yearly_tweets.plot(kind='bar');\n",
        "plt.title('Number of tweets per year', size=17);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "m31z-28VVL7N",
        "outputId": "77a23b85-38f1-4172-e36a-1ff42360df99"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x432 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import matplotlib.pyplot as plt\n",
        "import seaborn as sns\n",
        "df['text_len'] = df['text'].map(lambda x: len(x))\n",
        "df['text_n_words'] = df['text'].map(lambda x: len(x.split()))\n",
        "fig, ax = plt.subplots(figsize=(14,7))\n",
        "df.text_len.plot(kind='hist',edgecolor=\"k\");\n",
        "df.text_n_words.plot(kind='hist',color='r',edgecolor=\"k\", alpha=0.7);\n",
        "plt.axvline(df['text_len'].median(), ls = '--',color='r',lw=2);\n",
        "plt.axvline(df['text_n_words'].median(), ls = '--',color='r',lw=2);\n",
        "textstr = (f\"median characters in a tweet: {round(df['text_len'].median())} \\n\"\n",
        "           f\"median words in a tweet: {round(df['text_n_words'].median())}\")  \n",
        "props = dict(boxstyle='round', facecolor='wheat', alpha=0.5,edgecolor='black')\n",
        "plt.text(0.65, 0.95, textstr, fontsize=14,transform=ax.transAxes,verticalalignment='top', bbox=props)\n",
        "plt.title(\"The distribution of words and characters in all tweets\", pad=20);plt.margins(x=0);"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 458
        },
        "id": "aLVW9jlwVoz1",
        "outputId": "8c28b178-5644-4c69-df1d-29183cce56a9"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1008x504 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "JoLWue77fntc",
        "outputId": "81ce60a4-cced-4b14-e983-e14ce985057f"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "DatetimeIndex: 3204 entries, 2018-01-18 to 2022-04-06\n",
            "Data columns (total 13 columns):\n",
            " #   Column                                 Non-Null Count  Dtype \n",
            "---  ------                                 --------------  ----- \n",
            " 0   text                                   3204 non-null   object\n",
            " 1   author.id                              3204 non-null   int64 \n",
            " 2   author.public_metrics.tweet_count      3204 non-null   int64 \n",
            " 3   author.public_metrics.following_count  3204 non-null   int64 \n",
            " 4   author.public_metrics.followers_count  3204 non-null   int64 \n",
            " 5   public_metrics.like_count              3204 non-null   int64 \n",
            " 6   public_metrics.retweet_count           3204 non-null   int64 \n",
            " 7   month                                  3204 non-null   int64 \n",
            " 8   Weekday                                3204 non-null   int64 \n",
            " 9   Weekdayname                            3204 non-null   object\n",
            " 10  count                                  3204 non-null   int64 \n",
            " 11  text_len                               3204 non-null   int64 \n",
            " 12  text_n_words                           3204 non-null   int64 \n",
            "dtypes: int64(11), object(2)\n",
            "memory usage: 350.4+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "!twarc2 csv mayuri.jsonl olaf.csv --output-columns \"id,in_reply_to_user_id,created_at,source,text,retweeted_user_id,referenced_tweets.retweeted.id\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AbX9re0Mk2z_",
        "outputId": "f5bb3463-37e6-4216-de47-754e20a8dde1"
      },
      "execution_count": 44,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100% 6.76M/6.76M [00:01<00:00, 4.01MB/s]\n",
            "\n",
            "ℹ️\n",
            "Parsed 3204 tweets objects from 33 lines in the input file.\n",
            "Wrote 3204 rows and output 7 of 74 input columns in the CSV.\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df= pd.read_csv('olaf.csv',parse_dates=['created_at'])"
      ],
      "metadata": {
        "id": "Z7EBEKucmdWj"
      },
      "execution_count": 45,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "8SGoqxoBmk_c",
        "outputId": "a736a055-2221-4d9a-fca4-63614d603504"
      },
      "execution_count": 46,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       id  in_reply_to_user_id                created_at  \\\n",
              "0     1511734556621217792                  NaN 2022-04-06 15:56:19+00:00   \n",
              "1     1510735727587377156                  NaN 2022-04-03 21:47:20+00:00   \n",
              "2     1510735703139053568                  NaN 2022-04-03 21:47:14+00:00   \n",
              "3     1510273394448732161                  NaN 2022-04-02 15:10:11+00:00   \n",
              "4     1510267392257056777                  NaN 2022-04-02 14:46:20+00:00   \n",
              "...                   ...                  ...                       ...   \n",
              "3199   954407851425968128                  NaN 2018-01-19 17:38:58+00:00   \n",
              "3200   954389784729878528                  NaN 2018-01-19 16:27:11+00:00   \n",
              "3201   954294681172611074                  NaN 2018-01-19 10:09:16+00:00   \n",
              "3202   954042890493276167                  NaN 2018-01-18 17:28:45+00:00   \n",
              "3203   953953476056403968                  NaN 2018-01-18 11:33:26+00:00   \n",
              "\n",
              "                       source  \\\n",
              "0          Twitter for iPhone   \n",
              "1          Twitter for iPhone   \n",
              "2          Twitter for iPhone   \n",
              "3         Twitter for Android   \n",
              "4         Twitter for Android   \n",
              "...                       ...   \n",
              "3199  TweetCaster for Android   \n",
              "3200  TweetCaster for Android   \n",
              "3201                TweetDeck   \n",
              "3202  TweetCaster for Android   \n",
              "3203                TweetDeck   \n",
              "\n",
              "                                                   text  retweeted_user_id  \\\n",
              "0     Der russische Präsident hat sich verrechnet – ...       1.489165e+18   \n",
              "1     Furchtbare und grauenerregende Aufnahmen errei...       1.489165e+18   \n",
              "2     Ich verlange, dass internationale Organisation...       1.489165e+18   \n",
              "3     Die steigenden Energiepreise sind auch für die...       1.489165e+18   \n",
              "4     Hey #NRW, lasst uns gemeinsam das Morgen gewin...       2.645816e+07   \n",
              "...                                                 ...                ...   \n",
              "3199  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...       3.261177e+09   \n",
              "3200  Heute waren Berlins Regierender Bürgermeister ...                NaN   \n",
              "3201  Impressed by #Hamburg and @olafscholz ambition...       7.197752e+06   \n",
              "3202  Bürgermeister @OlafScholz besucht Müllverwertu...       3.439153e+09   \n",
              "3203  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...                NaN   \n",
              "\n",
              "      referenced_tweets.retweeted.id  \n",
              "0                       1.511702e+18  \n",
              "1                       1.510614e+18  \n",
              "2                       1.510614e+18  \n",
              "3                       1.510229e+18  \n",
              "4                       1.510222e+18  \n",
              "...                              ...  \n",
              "3199                    9.544059e+17  \n",
              "3200                             NaN  \n",
              "3201                    9.542935e+17  \n",
              "3202                    9.540422e+17  \n",
              "3203                             NaN  \n",
              "\n",
              "[3204 rows x 7 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-b769dd39-5c38-4373-a302-b0a10b4a0444\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>in_reply_to_user_id</th>\n",
              "      <th>created_at</th>\n",
              "      <th>source</th>\n",
              "      <th>text</th>\n",
              "      <th>retweeted_user_id</th>\n",
              "      <th>referenced_tweets.retweeted.id</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1511734556621217792</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>1.489165e+18</td>\n",
              "      <td>1.511702e+18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1510735727587377156</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>1.489165e+18</td>\n",
              "      <td>1.510614e+18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1510735703139053568</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>1.489165e+18</td>\n",
              "      <td>1.510614e+18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1510273394448732161</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>Twitter for Android</td>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>1.489165e+18</td>\n",
              "      <td>1.510229e+18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1510267392257056777</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>Twitter for Android</td>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2.645816e+07</td>\n",
              "      <td>1.510222e+18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>954407851425968128</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>TweetCaster for Android</td>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>3.261177e+09</td>\n",
              "      <td>9.544059e+17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>954389784729878528</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>TweetCaster for Android</td>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>954294681172611074</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>TweetDeck</td>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>7.197752e+06</td>\n",
              "      <td>9.542935e+17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>954042890493276167</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>TweetCaster for Android</td>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>3.439153e+09</td>\n",
              "      <td>9.540422e+17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>953953476056403968</td>\n",
              "      <td>NaN</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>TweetDeck</td>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 7 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b769dd39-5c38-4373-a302-b0a10b4a0444')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-b769dd39-5c38-4373-a302-b0a10b4a0444 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-b769dd39-5c38-4373-a302-b0a10b4a0444');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 46
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.info()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0yFz22y-nYpE",
        "outputId": "5e7d6541-7a90-4c99-fd88-55dbf294cc0c"
      },
      "execution_count": 47,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "<class 'pandas.core.frame.DataFrame'>\n",
            "RangeIndex: 3204 entries, 0 to 3203\n",
            "Data columns (total 7 columns):\n",
            " #   Column                          Non-Null Count  Dtype              \n",
            "---  ------                          --------------  -----              \n",
            " 0   id                              3204 non-null   int64              \n",
            " 1   in_reply_to_user_id             274 non-null    float64            \n",
            " 2   created_at                      3204 non-null   datetime64[ns, UTC]\n",
            " 3   source                          3204 non-null   object             \n",
            " 4   text                            3204 non-null   object             \n",
            " 5   retweeted_user_id               1256 non-null   float64            \n",
            " 6   referenced_tweets.retweeted.id  1256 non-null   float64            \n",
            "dtypes: datetime64[ns, UTC](1), float64(3), int64(1), object(2)\n",
            "memory usage: 175.3+ KB\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# get list of all float type columns\n",
        "# basically all columns which are some variation of in_reply_to_x or retweeted_status/user_id\n",
        "float_cols = list(df.select_dtypes(include=['float']).columns.values)\n",
        "print(float_cols)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "7QeW-sKxnlsr",
        "outputId": "5fa8e56e-aa19-4c7d-afcd-cac7f06dbf8f"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "['in_reply_to_user_id', 'retweeted_user_id', 'referenced_tweets.retweeted.id']\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# fill Nan's for all float types\n",
        "df[float_cols] = df[float_cols].fillna(0)\n",
        "\n",
        "# convert float_cols to int\n",
        "df[float_cols] = df[float_cols].astype(int)"
      ],
      "metadata": {
        "id": "-DFXI0djns4i"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# convert timestamp column to datetime type\n",
        "df['created_at'] = pd.to_datetime(df['created_at'])"
      ],
      "metadata": {
        "id": "VIJ4f8xent-b"
      },
      "execution_count": 50,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# create dictionary with values to plot\n",
        "# the imputed zeros need to be excluded here\n",
        "data = {\n",
        "        'Tweets': (df['id'] != 0).sum(),\n",
        "        'Replies': (df['in_reply_to_user_id']!=0).sum(), \n",
        "        'Retweets': (df['retweeted_user_id'] != 0).sum()\n",
        "        }\n",
        "names = list(data.keys())\n",
        "values = list(data.values())\n",
        "# plot the above data\n",
        "# set the figure size\n",
        "plt.figure(figsize=(12,8))\n",
        "\n",
        "# create a countplot, ordered by count\n",
        "plt.bar(names, values)\n",
        "\n",
        "# set the labels and title\n",
        "plt.xlabel('Type of Tweet)')\n",
        "plt.ylabel('Total tweets sent')\n",
        "plt.title('Tweets by type');\n",
        "\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "BVUoK7dzn4fz",
        "outputId": "e16d71c9-6f4c-4e61-9e20-47d6067284d8"
      },
      "execution_count": 51,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df['source'].head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "0WW0NUqqp16Z",
        "outputId": "a8a16fb4-54ad-4d71-a8d1-cbdc05dbb7b3"
      },
      "execution_count": 52,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "0     Twitter for iPhone\n",
              "1     Twitter for iPhone\n",
              "2     Twitter for iPhone\n",
              "3    Twitter for Android\n",
              "4    Twitter for Android\n",
              "Name: source, dtype: object"
            ]
          },
          "metadata": {},
          "execution_count": 52
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# get the value counts for source column\n",
        "df['source'].value_counts()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "XMwDR2hIqCq1",
        "outputId": "15196655-77c0-4813-9467-1e7d80f05f46"
      },
      "execution_count": 53,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Twitter for iPhone         1817\n",
              "Twitter for Android         656\n",
              "Twitter Web App             371\n",
              "TweetDeck                   198\n",
              "Twitter Web Client           63\n",
              "TweetCaster for Android      56\n",
              "Twitter for iPad             39\n",
              "Twitter Media Studio          4\n",
              "Name: source, dtype: int64"
            ]
          },
          "metadata": {},
          "execution_count": 53
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#plot the above data\n",
        "# set the figure size\n",
        "plt.figure(figsize=(15,8))\n",
        "\n",
        "# create a countplot, ordered by count\n",
        "sns.countplot(x='source', data=df, palette = 'Blues_r' , order = df['source'].value_counts().index)\n",
        "\n",
        "# rotate the ticks for better readability\n",
        "plt.xticks(rotation=45, fontsize='11', horizontalalignment='right')\n",
        "\n",
        "# set the labels and title\n",
        "plt.xlabel('Sources (i.e. Twitter clients)')\n",
        "plt.ylabel('Total tweets sent')\n",
        "plt.title('Tweets sent by source');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 604
        },
        "id": "1tBFuV8WqKl0",
        "outputId": "80801a44-6009-44dc-c595-695b0fdb8c36"
      },
      "execution_count": 54,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "text data analysis"
      ],
      "metadata": {
        "id": "hnX8-KBhrEQV"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "from wordcloud import WordCloud, STOPWORDS\n",
        "import imageio\n",
        "\n",
        "# join tweets to a single string\n",
        "words = ' '.join(df['text'])\n",
        "\n",
        "# remove URLs, RTs, and twitter handles\n",
        "no_urls_no_tags = \" \".join([word for word in words.split()\n",
        "                            if 'http' not in word\n",
        "                                and not word.startswith('@')\n",
        "                                and word != 'RT'\n",
        "                            ])\n",
        "\n",
        "\n",
        "# add some Croatian stopwords manually\n",
        "cro_stopwords = {\n",
        "                'si','se','su','sa','ce','cu','za','je','ja','ti','mi','da','od','kad','sam','pa','po','ili','ali','li',\n",
        "                'ako','iz','ne','nije','nisam','sad','sto','samo','ovo','ovaj','na','ima','ko','ova','koji','neki',\n",
        "                'jos','jo','jer','bi','ba','kako','sve','tako', 'ga','tu','bio','onda','kao','vec', 'nesto','mogu'    \n",
        "                }\n",
        "STOPWORDS = STOPWORDS.union(cro_stopwords)\n",
        "\n",
        "# generate the wordcloud\n",
        "wordcloud = WordCloud(\n",
        "                    stopwords = STOPWORDS,\n",
        "                    background_color='white',\n",
        "                    width=1800, \n",
        "                    height=1400, \n",
        "                    \n",
        "                    ).generate(no_urls_no_tags)\n",
        "\n",
        "# set the figure size\n",
        "plt.figure(figsize=(12,12))\n",
        "\n",
        "# show the wordcloud\n",
        "plt.imshow(wordcloud)\n",
        "plt.axis('off');\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 552
        },
        "id": "VxJC53o3rJ23",
        "outputId": "2c80082c-2515-48fe-f51e-49ebb658e3fa"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 864x864 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import numpy as np\n",
        "# calculate number of characters in a tweet and save as new column\n",
        "df['tweet_length']  = np.array([len(tweet) for tweet in df['text']])\n",
        "\n",
        "print('Average number of characters per tweet:', df['tweet_length'].mean())\n",
        "print('Average number of characters per reply:', df['tweet_length'][df['in_reply_to_user_id'] != 0].mean())\n",
        "print('Average number of characters per retweet:', df['tweet_length'][df['retweeted_user_id'] != 0].mean())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "wl6kZ2k_sKbX",
        "outputId": "e8c1bac2-fcd5-4381-fd30-301477246e9a"
      },
      "execution_count": 56,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Average number of characters per tweet: 223.5727215980025\n",
            "Average number of characters per reply: 216.16423357664235\n",
            "Average number of characters per retweet: 241.9546178343949\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "from textblob import TextBlob\n",
        "import re\n",
        "\n",
        "def clean_tweet(tweet):\n",
        "    # remove special characters, links from tweets\n",
        "    return ' '.join(re.sub(\"(@[A-Za-z0-9]+)|([^0-9A-Za-z \\t])|(\\w+:\\/\\/\\S+)\", \" \", tweet).split())\n",
        "\n",
        "def analize_sentiment(tweet):\n",
        "    # predict the sentiment of a tweet using textblob\n",
        "    analysis = TextBlob(clean_tweet(tweet))\n",
        "    if analysis.sentiment.polarity > 0:\n",
        "        return 1\n",
        "    elif analysis.sentiment.polarity == 0:\n",
        "        return 0\n",
        "    else:\n",
        "        return -1"
      ],
      "metadata": {
        "id": "9790hcb9tVOl"
      },
      "execution_count": 57,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# create a new column with the result of the sentiment analysis\n",
        "df['sentiment'] = np.array([analize_sentiment(tweet) for tweet in df['text']])"
      ],
      "metadata": {
        "id": "SsEFSlxmtXY1"
      },
      "execution_count": 112,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "# construct lists with classified tweets\n",
        "pos_tweets = [ tweet for index, tweet in enumerate(df['text']) if df['sentiment'][index] > 0]\n",
        "neu_tweets = [ tweet for index, tweet in enumerate(df['text']) if df['sentiment'][index] == 0]\n",
        "neg_tweets = [ tweet for index, tweet in enumerate(df['text']) if df['sentiment'][index] < 0]\n",
        "\n",
        "\n",
        "\n",
        "# print percentages\n",
        "print(\"Percentage of positive tweets: {}%\".format(len(pos_tweets)*100/len(df['text'])))\n",
        "print(\"Percentage of neutral tweets: {}%\".format(len(neu_tweets)*100/len(df['text'])))\n",
        "print(\"Percentage of negative tweets: {}%\".format(len(neg_tweets)*100/len(df['text'])))"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "iPrRoVC4tdm2",
        "outputId": "d320a96e-6c5c-4a55-c520-a42c081d8430"
      },
      "execution_count": 113,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Percentage of positive tweets: 8.021223470661672%\n",
            "Percentage of neutral tweets: 90.35580524344569%\n",
            "Percentage of negative tweets: 1.6229712858926342%\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import seaborn as sns\n",
        "sns.countplot(df['sentiment'])"
      ],
      "metadata": {
        "id": "KUQbHeE_JIa6",
        "outputId": "34a6ebf2-5dff-4a6b-ea29-286a8de7c0cf",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 387
        }
      },
      "execution_count": 114,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/seaborn/_decorators.py:43: FutureWarning:\n",
            "\n",
            "Pass the following variable as a keyword arg: x. From version 0.12, the only valid positional argument will be `data`, and passing other arguments without an explicit keyword will result in an error or misinterpretation.\n",
            "\n"
          ]
        },
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "<matplotlib.axes._subplots.AxesSubplot at 0x7fe8cab868d0>"
            ]
          },
          "metadata": {},
          "execution_count": 114
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 432x288 with 1 Axes>"
            ],
            "image/png": "iVBORw0KGgoAAAANSUhEUgAAAYsAAAEHCAYAAABfkmooAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4yLjIsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy+WH4yJAAASeklEQVR4nO3df7DldX3f8edLQGL9UbDcENjddplkrbNos+Id1NDOEK2ITBLUEoVOZCW0mz/AH03SGXQ6wWqY6kSlSi2ZTdiwpIkbmpi6OjR0JbZGR4S76RZYqOVGsexmZa8u8UdtsEve/eN8Vo/Lvfu5d7nnnnv3Ph8zZ873+/7++Lwvd+DF9+dNVSFJ0rE8Y9wNSJKWP8NCktRlWEiSugwLSVKXYSFJ6jIsJEldJ49qx0l+BPgscGob5w+r6vok5wA7gL8D7AbeXFXfS3IqcBvwUuAbwJuq6pG2r3cCVwNPAm+rqjuPNfYZZ5xR69evH8nPJUknqt27d3+9qiZmWzaysACeAF5ZVd9JcgrwuST/Gfhl4Maq2pHkNxmEwM3t+/Gq+okklwPvB96UZCNwOXAucDbw6SQvqKon5xp4/fr1TE1NjfBHk6QTT5KvzrVsZKehauA7bfaU9inglcAftvp24HVt+tI2T1v+qiRp9R1V9URVfQWYBs4fVd+SpKca6TWLJCcl2QMcBHYBfwH8VVUdbqvsA9a06TXAowBt+TcZnKr6fn2WbYbH2pJkKsnUzMzMKH4cSVq1RhoWVfVkVW0C1jI4GnjhCMfaWlWTVTU5MTHrKTdJ0nFakruhquqvgM8ArwBOS3LkWslaYH+b3g+sA2jL/zaDC93fr8+yjSRpCYwsLJJMJDmtTT8LeDXwEIPQuKytthn4RJve2eZpy/+0Bm853AlcnuTUdifVBuCeUfUtSXqqUd4NdRawPclJDELp9qr6VJIHgR1Jfh3478Atbf1bgN9NMg0cYnAHFFW1N8ntwIPAYeCaY90JJUlafDkRX1E+OTlZ3jorSQuTZHdVTc62zCe4JUldhoUkqWuU1yykkfvf73nxuFs44f3dX7t/3C1oGfDIQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpK6RhUWSdUk+k+TBJHuTvL3V351kf5I97XPJ0DbvTDKd5EtJXjNUv7jVppNcN6qeJUmzO3mE+z4M/EpV/XmS5wK7k+xqy26sqg8Mr5xkI3A5cC5wNvDpJC9oiz8KvBrYB9ybZGdVPTjC3iVJQ0YWFlV1ADjQpr+d5CFgzTE2uRTYUVVPAF9JMg2c35ZNV9WXAZLsaOsaFpK0RJbkmkWS9cBLgC+20rVJ7kuyLcnprbYGeHRos32tNlf96DG2JJlKMjUzM7PIP4EkrW4jD4skzwH+CHhHVX0LuBn4cWATgyOPDy7GOFW1taomq2pyYmJiMXYpSWpGec2CJKcwCIrfq6qPA1TVY0PLfwv4VJvdD6wb2nxtq3GMuiRpCYzybqgAtwAPVdWHhupnDa32euCBNr0TuDzJqUnOATYA9wD3AhuSnJPkmQwugu8cVd+SpKca5ZHFBcCbgfuT7Gm1dwFXJNkEFPAI8EsAVbU3ye0MLlwfBq6pqicBklwL3AmcBGyrqr0j7FuSdJRR3g31OSCzLLrjGNvcANwwS/2OY20nSRotn+CWJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktQ1srBIsi7JZ5I8mGRvkre3+vOT7ErycPs+vdWT5CNJppPcl+S8oX1tbus/nGTzqHqWJM1ulEcWh4FfqaqNwMuBa5JsBK4D7qqqDcBdbR7gtcCG9tkC3AyDcAGuB14GnA9cfyRgJElLY2RhUVUHqurP2/S3gYeANcClwPa22nbgdW36UuC2GrgbOC3JWcBrgF1VdaiqHgd2ARePqm9J0lMtyTWLJOuBlwBfBM6sqgNt0deAM9v0GuDRoc32tdpc9aPH2JJkKsnUzMzMovYvSavdyMMiyXOAPwLeUVXfGl5WVQXUYoxTVVurarKqJicmJhZjl5KkZqRhkeQUBkHxe1X18VZ+rJ1eon0fbPX9wLqhzde22lx1SdISGeXdUAFuAR6qqg8NLdoJHLmjaTPwiaH6le2uqJcD32ynq+4ELkpyeruwfVGrSZKWyMkj3PcFwJuB+5PsabV3Ae8Dbk9yNfBV4I1t2R3AJcA08F3gKoCqOpTkvcC9bb33VNWhEfYtSTrKyMKiqj4HZI7Fr5pl/QKumWNf24Bti9edJGkhfIJbktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1DWvsEhy13xqkqQT0zH/rGqSHwH+FnBGktP5wZ9JfR6wZsS9SZKWid7f4P4l4B3A2cBufhAW3wL+3Qj7kiQtI8cMi6r6MPDhJG+tqpuWqCdJ0jLTO7IAoKpuSvJTwPrhbarqthH1JUlaRuYVFkl+F/hxYA/wZCsXYFhI0iowr7AAJoGNVVWjbEaStDzN9zmLB4AfG2UjkqTla75HFmcADya5B3jiSLGqfm4kXUmSlpX5hsW7F7rjJNuAnwEOVtWLWu3dwD8HZtpq76qqO9qydwJXM7gm8raqurPVLwY+DJwE/HZVvW+hvUiSnp753g31345j37cyeBbj6IvgN1bVB4YLSTYClwPnMnim49NJXtAWfxR4NbAPuDfJzqp68Dj6kSQdp/neDfVtBnc/ATwTOAX4P1X1vLm2qarPJlk/zz4uBXZU1RPAV5JMA+e3ZdNV9eXWx462rmEhSUtoXhe4q+q5VfW8Fg7PAv4J8O+Pc8xrk9yXZFt7hQgMXh3y6NA6+1ptrrokaQkt+K2zNfCfgNccx3g3M3heYxNwAPjgcexjVkm2JJlKMjUzM9PfQJI0b/M9DfWGodlnMHju4q8XOlhVPTa0z98CPtVm9wPrhlZd22oco370vrcCWwEmJyd9HkSSFtF874b62aHpw8AjDK4dLEiSs6rqQJt9PYPnNwB2Ar+f5EMMLnBvAO5h8OLCDUnOYRASlwP/dKHjSpKenvneDXXVQnec5GPAhQxeb74PuB64MMkmBhfLH2HwVluqam+S2xlcuD4MXFNVT7b9XAvcyeDW2W1VtXehvUiSnp75noZaC9wEXNBKfwa8var2zbVNVV0xS/mWY6x/A3DDLPU7gDvm06ckaTTme4H7dxicKjq7fT7ZapKkVWC+YTFRVb9TVYfb51ZgYoR9SZKWkfmGxTeS/EKSk9rnF4BvjLIxSdLyMd+w+EXgjcDXGDwfcRnwlhH1JElaZuZ76+x7gM1V9ThAkucDH2AQIpKkE9x8jyz+wZGgAKiqQ8BLRtOSJGm5mW9YPGPoPU5Hjizme1QiSVrh5vsf/A8CX0jyH9v8zzPLMxGSpBPTfJ/gvi3JFPDKVnqDf1NCklaPeZ9KauFgQEjSKrTgV5RLklYfw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpK6RhUWSbUkOJnlgqPb8JLuSPNy+T2/1JPlIkukk9yU5b2ibzW39h5NsHlW/kqS5jfLI4lbg4qNq1wF3VdUG4K42D/BaYEP7bAFuhkG4ANcDLwPOB64/EjCSpKUzsrCoqs8Ch44qXwpsb9PbgdcN1W+rgbuB05KcBbwG2FVVh6rqcWAXTw0gSdKILfU1izOr6kCb/hpwZpteAzw6tN6+Vpur/hRJtiSZSjI1MzOzuF1L0io3tgvcVVVALeL+tlbVZFVNTkxMLNZuJUksfVg81k4v0b4Ptvp+YN3Qemtbba66JGkJLXVY7ASO3NG0GfjEUP3KdlfUy4FvttNVdwIXJTm9Xdi+qNUkSUvo5FHtOMnHgAuBM5LsY3BX0/uA25NcDXwVeGNb/Q7gEmAa+C5wFUBVHUryXuDett57quroi+aSpBEbWVhU1RVzLHrVLOsWcM0c+9kGbFvE1iRJC+QT3JKkLsNCktRlWEiSugwLSVKXYSFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHUZFpKkLsNCktRlWEiSusYSFkkeSXJ/kj1Jplrt+Ul2JXm4fZ/e6knykSTTSe5Lct44epak1WycRxY/XVWbqmqyzV8H3FVVG4C72jzAa4EN7bMFuHnJO5WkVW45nYa6FNjeprcDrxuq31YDdwOnJTlrHA1K0mo1rrAo4L8k2Z1kS6udWVUH2vTXgDPb9Brg0aFt97XaD0myJclUkqmZmZlR9S1Jq9LJYxr3H1bV/iQ/CuxK8j+HF1ZVJamF7LCqtgJbASYnJxe0rSTp2MZyZFFV+9v3QeCPgfOBx46cXmrfB9vq+4F1Q5uvbTVJ0hJZ8rBI8uwkzz0yDVwEPADsBDa31TYDn2jTO4Er211RLwe+OXS6SpK0BMZxGupM4I+THBn/96vqT5LcC9ye5Grgq8Ab2/p3AJcA08B3gauWvmVJWt2WPCyq6svAT85S/wbwqlnqBVyzBK1JkuawnG6dlSQtU4aFJKnLsJAkdRkWkqQuw0KS1GVYSJK6DAtJUpdhIUnqMiwkSV2GhSSpy7CQJHWN6+9ZSBIX3HTBuFs44X3+rZ9flP14ZCFJ6jIsJEldhoUkqcuwkCR1GRaSpC7DQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdRkWkqQuw0KS1OUryoGX/svbxt3CCW/3b1w57hYkPQ0r5sgiycVJvpRkOsl14+5HklaTFREWSU4CPgq8FtgIXJFk43i7kqTVY0WEBXA+MF1VX66q7wE7gEvH3JMkrRqpqnH30JXkMuDiqvpnbf7NwMuq6tqhdbYAW9rs3we+tOSNLp0zgK+PuwkdN39/K9eJ/rv7e1U1MduCE+YCd1VtBbaOu4+lkGSqqibH3YeOj7+/lWs1/+5Wymmo/cC6ofm1rSZJWgIrJSzuBTYkOSfJM4HLgZ1j7kmSVo0VcRqqqg4nuRa4EzgJ2FZVe8fc1jititNtJzB/fyvXqv3drYgL3JKk8Vopp6EkSWNkWEiSugyLFSbJC5N8IckTSX513P1o/nxlzcqVZFuSg0keGHcv42JYrDyHgLcBHxh3I5o/X1mz4t0KXDzuJsbJsFhhqupgVd0L/L9x96IF8ZU1K1hVfZbB/6itWoaFtDTWAI8Oze9rNWlFMCwkSV2GxQqQ5Joke9rn7HH3o+PiK2u0ohkWK0BVfbSqNrXPX467Hx0XX1mjFc0nuFeYJD8GTAHPA/4G+A6wsaq+NdbG1JXkEuDf8oNX1tww5pY0T0k+BlzI4BXljwHXV9UtY21qiRkWkqQuT0NJkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAWWZJN7TbZI/M/N+q3zCa5MMlPjXIMrW6GhbT4NgHfD4uq2llV7xvxmBcChoVGxucspCFJng3czuB1HCcB7wWmgQ8BzwG+Drylqg4k+a/AF4GfBk4Drm7z08CzGLzO49+06cmqujbJrcD/BV4C/Cjwi8CVwCuAL1bVW1ofFwH/GjgV+Avgqqr6TpJHgO3AzwKnAD8P/DVwN/AkMAO8tar+bBT/fLR6eWQh/bCLgb+sqp+sqhcBfwLcBFxWVS8FtgHDT16fXFXnA+9g8FTv94BfA/6gvZ7lD2YZ43QG4fAvGLzy40bgXODF7RTWGcC/Av5xVZ3H4In9Xx7a/uutfjPwq1X1CPCbwI1tTINCi+7kcTcgLTP3Ax9M8n7gU8DjwIuAXUlgcLRxYGj9j7fv3cD6eY7xyaqqJPcDj1XV/QBJ9rZ9rGXwB5I+38Z8JvCFOcZ8wwJ+Num4GRbSkKr6X0nOY3DN4deBPwX2VtUr5tjkifb9JPP/9+nINn8zNH1k/uS2r11VdcUijik9LZ6Gkoa0V8B/t6r+A/AbwMuAiSSvaMtPSXJuZzffBp77NNq4G7ggyU+0MZ+d5AUjHlM6JsNC+mEvBu5Jsge4nsH1h8uA9yf5H8Ae+ncdfQbY2P7+yJsW2kBVzQBvAT6W5D4Gp6Be2Nnsk8Dr25j/aKFjSj3eDSVJ6vLIQpLUZVhIkroMC0lSl2EhSeoyLCRJXYaFJKnLsJAkdf1/Lm4V950e8K0AAAAASUVORK5CYII=\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "sentiment_Series = pd.Series(data = df['sentiment'].values, index = df['Date'])\n",
        "sentiment_Series.plot(figsize = (16, 4), color = 'g')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('Sentiments')"
      ],
      "metadata": {
        "id": "hp_BrEGDJzQQ",
        "outputId": "59920b6e-b2e0-4382-a6e3-dcc2d7176242",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        }
      },
      "execution_count": 116,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'Sentiments')"
            ]
          },
          "metadata": {},
          "execution_count": 116
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "time series analysis"
      ],
      "metadata": {
        "id": "YaP-dbZCtn3s"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "# create a copy of the dataframe\n",
        "df_time = df.copy()\n",
        "\n",
        "# set the timestamp column as the index and delete the column\n",
        "df_time.index = df_time['created_at']\n",
        "del df_time['created_at']\n",
        "\n",
        "df_time.head()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 368
        },
        "id": "bCj3Plx7tjMe",
        "outputId": "921af9bc-8de4-47d7-83b7-085544c14863"
      },
      "execution_count": 60,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                                            id  in_reply_to_user_id  \\\n",
              "created_at                                                            \n",
              "2022-04-06 15:56:19+00:00  1511734556621217792                    0   \n",
              "2022-04-03 21:47:20+00:00  1510735727587377156                    0   \n",
              "2022-04-03 21:47:14+00:00  1510735703139053568                    0   \n",
              "2022-04-02 15:10:11+00:00  1510273394448732161                    0   \n",
              "2022-04-02 14:46:20+00:00  1510267392257056777                    0   \n",
              "\n",
              "                                        source  \\\n",
              "created_at                                       \n",
              "2022-04-06 15:56:19+00:00   Twitter for iPhone   \n",
              "2022-04-03 21:47:20+00:00   Twitter for iPhone   \n",
              "2022-04-03 21:47:14+00:00   Twitter for iPhone   \n",
              "2022-04-02 15:10:11+00:00  Twitter for Android   \n",
              "2022-04-02 14:46:20+00:00  Twitter for Android   \n",
              "\n",
              "                                                                        text  \\\n",
              "created_at                                                                     \n",
              "2022-04-06 15:56:19+00:00  Der russische Präsident hat sich verrechnet – ...   \n",
              "2022-04-03 21:47:20+00:00  Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "2022-04-03 21:47:14+00:00  Ich verlange, dass internationale Organisation...   \n",
              "2022-04-02 15:10:11+00:00  Die steigenden Energiepreise sind auch für die...   \n",
              "2022-04-02 14:46:20+00:00  Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "\n",
              "                             retweeted_user_id  \\\n",
              "created_at                                       \n",
              "2022-04-06 15:56:19+00:00  1489164711652466688   \n",
              "2022-04-03 21:47:20+00:00  1489164711652466688   \n",
              "2022-04-03 21:47:14+00:00  1489164711652466688   \n",
              "2022-04-02 15:10:11+00:00  1489164711652466688   \n",
              "2022-04-02 14:46:20+00:00             26458162   \n",
              "\n",
              "                           referenced_tweets.retweeted.id  tweet_length  \\\n",
              "created_at                                                                \n",
              "2022-04-06 15:56:19+00:00             1511701867625127936           189   \n",
              "2022-04-03 21:47:20+00:00             1510614000232509440           221   \n",
              "2022-04-03 21:47:14+00:00             1510614177148293120           248   \n",
              "2022-04-02 15:10:11+00:00             1510229402419929088           263   \n",
              "2022-04-02 14:46:20+00:00             1510222330689171456           303   \n",
              "\n",
              "                           sentiment  \n",
              "created_at                            \n",
              "2022-04-06 15:56:19+00:00          0  \n",
              "2022-04-03 21:47:20+00:00          0  \n",
              "2022-04-03 21:47:14+00:00          0  \n",
              "2022-04-02 15:10:11+00:00          0  \n",
              "2022-04-02 14:46:20+00:00          0  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-adcde55f-fd36-4488-a311-ea83cf039496\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>in_reply_to_user_id</th>\n",
              "      <th>source</th>\n",
              "      <th>text</th>\n",
              "      <th>retweeted_user_id</th>\n",
              "      <th>referenced_tweets.retweeted.id</th>\n",
              "      <th>tweet_length</th>\n",
              "      <th>sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>created_at</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2022-04-06 15:56:19+00:00</th>\n",
              "      <td>1511734556621217792</td>\n",
              "      <td>0</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>1489164711652466688</td>\n",
              "      <td>1511701867625127936</td>\n",
              "      <td>189</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-04-03 21:47:20+00:00</th>\n",
              "      <td>1510735727587377156</td>\n",
              "      <td>0</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>1489164711652466688</td>\n",
              "      <td>1510614000232509440</td>\n",
              "      <td>221</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-04-03 21:47:14+00:00</th>\n",
              "      <td>1510735703139053568</td>\n",
              "      <td>0</td>\n",
              "      <td>Twitter for iPhone</td>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>1489164711652466688</td>\n",
              "      <td>1510614177148293120</td>\n",
              "      <td>248</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-04-02 15:10:11+00:00</th>\n",
              "      <td>1510273394448732161</td>\n",
              "      <td>0</td>\n",
              "      <td>Twitter for Android</td>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>1489164711652466688</td>\n",
              "      <td>1510229402419929088</td>\n",
              "      <td>263</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-04-02 14:46:20+00:00</th>\n",
              "      <td>1510267392257056777</td>\n",
              "      <td>0</td>\n",
              "      <td>Twitter for Android</td>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>26458162</td>\n",
              "      <td>1510222330689171456</td>\n",
              "      <td>303</td>\n",
              "      <td>0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-adcde55f-fd36-4488-a311-ea83cf039496')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-adcde55f-fd36-4488-a311-ea83cf039496 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-adcde55f-fd36-4488-a311-ea83cf039496');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 60
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "print('Total tweets in 2019:', df_time['2019']['id'].count())\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "PFbTVaO4t4D7",
        "outputId": "0eff1eb7-b8b2-4ae1-94cc-2cfd1371f087"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Total tweets in 2019: 758\n"
          ]
        },
        {
          "output_type": "stream",
          "name": "stderr",
          "text": [
            "/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:1: FutureWarning:\n",
            "\n",
            "Indexing a DataFrame with a datetimelike index using a single string to slice the rows, like `frame[string]`, is deprecated and will be removed in a future version. Use `frame.loc[string]` instead.\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# create a yearly overview for all features\n",
        "# resample('AS') resamples the time series data using year start as the period\n",
        "(df_time!=0).resample('AS').sum()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 238
        },
        "id": "FgjI-80Nt-5v",
        "outputId": "f4f6561b-6215-4f25-cc2f-1a92a09a9079"
      },
      "execution_count": 62,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                             id  in_reply_to_user_id  source  text  \\\n",
              "created_at                                                           \n",
              "2018-01-01 00:00:00+00:00   440                   10     440   440   \n",
              "2019-01-01 00:00:00+00:00   758                   38     758   758   \n",
              "2020-01-01 00:00:00+00:00   563                   32     563   563   \n",
              "2021-01-01 00:00:00+00:00  1371                  193    1371  1371   \n",
              "2022-01-01 00:00:00+00:00    72                    1      72    72   \n",
              "\n",
              "                           retweeted_user_id  referenced_tweets.retweeted.id  \\\n",
              "created_at                                                                     \n",
              "2018-01-01 00:00:00+00:00                237                             237   \n",
              "2019-01-01 00:00:00+00:00                243                             243   \n",
              "2020-01-01 00:00:00+00:00                189                             189   \n",
              "2021-01-01 00:00:00+00:00                533                             533   \n",
              "2022-01-01 00:00:00+00:00                 54                              54   \n",
              "\n",
              "                           tweet_length  sentiment  \n",
              "created_at                                          \n",
              "2018-01-01 00:00:00+00:00           440         37  \n",
              "2019-01-01 00:00:00+00:00           758         81  \n",
              "2020-01-01 00:00:00+00:00           563         66  \n",
              "2021-01-01 00:00:00+00:00          1371        120  \n",
              "2022-01-01 00:00:00+00:00            72          5  "
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-67805128-1b84-4c59-a8e8-110b81c90f56\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>in_reply_to_user_id</th>\n",
              "      <th>source</th>\n",
              "      <th>text</th>\n",
              "      <th>retweeted_user_id</th>\n",
              "      <th>referenced_tweets.retweeted.id</th>\n",
              "      <th>tweet_length</th>\n",
              "      <th>sentiment</th>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>created_at</th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "      <th></th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>2018-01-01 00:00:00+00:00</th>\n",
              "      <td>440</td>\n",
              "      <td>10</td>\n",
              "      <td>440</td>\n",
              "      <td>440</td>\n",
              "      <td>237</td>\n",
              "      <td>237</td>\n",
              "      <td>440</td>\n",
              "      <td>37</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2019-01-01 00:00:00+00:00</th>\n",
              "      <td>758</td>\n",
              "      <td>38</td>\n",
              "      <td>758</td>\n",
              "      <td>758</td>\n",
              "      <td>243</td>\n",
              "      <td>243</td>\n",
              "      <td>758</td>\n",
              "      <td>81</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2020-01-01 00:00:00+00:00</th>\n",
              "      <td>563</td>\n",
              "      <td>32</td>\n",
              "      <td>563</td>\n",
              "      <td>563</td>\n",
              "      <td>189</td>\n",
              "      <td>189</td>\n",
              "      <td>563</td>\n",
              "      <td>66</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2021-01-01 00:00:00+00:00</th>\n",
              "      <td>1371</td>\n",
              "      <td>193</td>\n",
              "      <td>1371</td>\n",
              "      <td>1371</td>\n",
              "      <td>533</td>\n",
              "      <td>533</td>\n",
              "      <td>1371</td>\n",
              "      <td>120</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2022-01-01 00:00:00+00:00</th>\n",
              "      <td>72</td>\n",
              "      <td>1</td>\n",
              "      <td>72</td>\n",
              "      <td>72</td>\n",
              "      <td>54</td>\n",
              "      <td>54</td>\n",
              "      <td>72</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-67805128-1b84-4c59-a8e8-110b81c90f56')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-67805128-1b84-4c59-a8e8-110b81c90f56 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-67805128-1b84-4c59-a8e8-110b81c90f56');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 62
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# plot some of the above data\n",
        "# define a list of columns to plot\n",
        "plot_cols = ['id', 'in_reply_to_user_id', 'retweeted_user_id']\n",
        "\n",
        "# set the figure size\n",
        "plt.figure(figsize=(15,8))\n",
        " \n",
        "# create a color palette\n",
        "palette = plt.get_cmap('Set1')\n",
        "\n",
        "# multiple line plot\n",
        "num=0\n",
        "for column in df_time[plot_cols]:\n",
        "    num+=1\n",
        "    plt.plot((df_time!=0)[column].resample('AS').sum(), marker='', color=palette(num), linewidth=1)\n",
        "    \n",
        "# now re do the most important curve, but with bigger line width\n",
        "plt.plot((df_time!=0)['id'].resample('AS').sum(), marker='', color='slateblue', linewidth=3)\n",
        "\n",
        "# add a legend with custom labels\n",
        "mylabels = ['tweets','replies','retweets']\n",
        "plt.legend(labels = mylabels)\n",
        "\n",
        "# add labels and title\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Total tweets sent')\n",
        "plt.title('Types of tweets sent by year');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "eVCCb8wquopP",
        "outputId": "48dbb40b-d100-435b-b3ad-c64332fac215"
      },
      "execution_count": 63,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "# set the figure size\n",
        "plt.figure(figsize=(15,8))\n",
        " \n",
        "# now re do the most important curve, but with bigger line width\n",
        "plt.plot(df_time['tweet_length'].resample('YS').mean(), marker='', color='green', linewidth=3)\n",
        "\n",
        "# add labels and title\n",
        "plt.xlabel('Year')\n",
        "plt.ylabel('Mean tweet length')\n",
        "plt.title('Mean tweet length per year');"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 513
        },
        "id": "qMDUzSvpvrwY",
        "outputId": "90e5c32f-0d3f-4cc5-f2b1-a8a5a6c4831d"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1080x576 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "count analysis"
      ],
      "metadata": {
        "id": "johXrYKRwgQH"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "!twarc2 csv mayuri.jsonl analysis.csv --output-columns \"id,text,created_at,author.id,author.public_metrics.tweet_count,author.public_metrics.following_count,author.public_metrics.followers_count,public_metrics.like_count,public_metrics.retweet_count\""
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "_UYQBjLYwiee",
        "outputId": "9e4b5869-ec39-4dba-d3a8-d6d778e20743"
      },
      "execution_count": 65,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100% 6.76M/6.76M [00:01<00:00, 3.90MB/s]\n",
            "\n",
            "ℹ️\n",
            "Parsed 3204 tweets objects from 33 lines in the input file.\n",
            "Wrote 3204 rows and output 9 of 74 input columns in the CSV.\n",
            "\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n",
        "df= pd.read_csv('analysis.csv',parse_dates=['created_at'])"
      ],
      "metadata": {
        "id": "6C-d9gAbyPGh"
      },
      "execution_count": 66,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 731
        },
        "id": "DtRGIFiayR7h",
        "outputId": "b45f070f-cd1f-4310-f58b-cc992f22299e"
      },
      "execution_count": 86,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       id                                               text  \\\n",
              "0     1511734556621217792  Der russische Präsident hat sich verrechnet – ...   \n",
              "1     1510735727587377156  Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "2     1510735703139053568  Ich verlange, dass internationale Organisation...   \n",
              "3     1510273394448732161  Die steigenden Energiepreise sind auch für die...   \n",
              "4     1510267392257056777  Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "...                   ...                                                ...   \n",
              "3199   954407851425968128  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "3200   954389784729878528  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3201   954294681172611074  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3202   954042890493276167  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3203   953953476056403968  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "\n",
              "                    created_at  author.id  author.public_metrics.tweet_count  \\\n",
              "0    2022-04-06 15:56:19+00:00   38150247                               6556   \n",
              "1    2022-04-03 21:47:20+00:00   38150247                               6556   \n",
              "2    2022-04-03 21:47:14+00:00   38150247                               6556   \n",
              "3    2022-04-02 15:10:11+00:00   38150247                               6556   \n",
              "4    2022-04-02 14:46:20+00:00   38150247                               6556   \n",
              "...                        ...        ...                                ...   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247                               6556   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247                               6556   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247                               6556   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247                               6556   \n",
              "3203 2018-01-18 11:33:26+00:00   38150247                               6556   \n",
              "\n",
              "      author.public_metrics.following_count  \\\n",
              "0                                      1443   \n",
              "1                                      1443   \n",
              "2                                      1443   \n",
              "3                                      1443   \n",
              "4                                      1443   \n",
              "...                                     ...   \n",
              "3199                                   1443   \n",
              "3200                                   1443   \n",
              "3201                                   1443   \n",
              "3202                                   1443   \n",
              "3203                                   1443   \n",
              "\n",
              "      author.public_metrics.followers_count  public_metrics.like_count  \\\n",
              "0                                    522466                       1631   \n",
              "1                                    522466                       8415   \n",
              "2                                    522466                       7574   \n",
              "3                                    522466                       2152   \n",
              "4                                    522466                        355   \n",
              "...                                     ...                        ...   \n",
              "3199                                 522466                          2   \n",
              "3200                                 522466                         35   \n",
              "3201                                 522466                         18   \n",
              "3202                                 522466                          6   \n",
              "3203                                 522466                        206   \n",
              "\n",
              "      public_metrics.retweet_count  \n",
              "0                              214  \n",
              "1                             1130  \n",
              "2                              704  \n",
              "3                              185  \n",
              "4                               39  \n",
              "...                            ...  \n",
              "3199                             2  \n",
              "3200                            11  \n",
              "3201                            10  \n",
              "3202                             3  \n",
              "3203                            16  \n",
              "\n",
              "[3204 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-6f90cad3-ea6b-4f98-868f-466326345891\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>text</th>\n",
              "      <th>created_at</th>\n",
              "      <th>author.id</th>\n",
              "      <th>author.public_metrics.tweet_count</th>\n",
              "      <th>author.public_metrics.following_count</th>\n",
              "      <th>author.public_metrics.followers_count</th>\n",
              "      <th>public_metrics.like_count</th>\n",
              "      <th>public_metrics.retweet_count</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1511734556621217792</td>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1510735727587377156</td>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1510735703139053568</td>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1510273394448732161</td>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1510267392257056777</td>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>954407851425968128</td>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>954389784729878528</td>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>954294681172611074</td>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>954042890493276167</td>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>953953476056403968</td>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6f90cad3-ea6b-4f98-868f-466326345891')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-6f90cad3-ea6b-4f98-868f-466326345891 button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-6f90cad3-ea6b-4f98-868f-466326345891');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 86
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df.rename(columns = {'author.public_metrics.followers_count':'follower','author.public_metrics.following_count':'following','author.public_metrics.tweet_count':'status','created_at':'Date','public_metrics.like_count':'Likes','public_metrics.retweet_count':'Retweets'}, inplace = True)"
      ],
      "metadata": {
        "id": "8fNq2_6PFVDV"
      },
      "execution_count": 107,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 424
        },
        "id": "xSgeazdSFfFC",
        "outputId": "9b6cc3d8-78b3-443a-dcb3-0ccd2bcfded6"
      },
      "execution_count": 108,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "                       id                                               text  \\\n",
              "0     1511734556621217792  Der russische Präsident hat sich verrechnet – ...   \n",
              "1     1510735727587377156  Furchtbare und grauenerregende Aufnahmen errei...   \n",
              "2     1510735703139053568  Ich verlange, dass internationale Organisation...   \n",
              "3     1510273394448732161  Die steigenden Energiepreise sind auch für die...   \n",
              "4     1510267392257056777  Hey #NRW, lasst uns gemeinsam das Morgen gewin...   \n",
              "...                   ...                                                ...   \n",
              "3199   954407851425968128  Weiter geht’s mit: Andreas Dressel (SPD-Frakti...   \n",
              "3200   954389784729878528  Heute waren Berlins Regierender Bürgermeister ...   \n",
              "3201   954294681172611074  Impressed by #Hamburg and @olafscholz ambition...   \n",
              "3202   954042890493276167  Bürgermeister @OlafScholz besucht Müllverwertu...   \n",
              "3203   953953476056403968  Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...   \n",
              "\n",
              "                          Date  author.id  status  following  follower  Likes  \\\n",
              "0    2022-04-06 15:56:19+00:00   38150247    6556       1443    522466   1631   \n",
              "1    2022-04-03 21:47:20+00:00   38150247    6556       1443    522466   8415   \n",
              "2    2022-04-03 21:47:14+00:00   38150247    6556       1443    522466   7574   \n",
              "3    2022-04-02 15:10:11+00:00   38150247    6556       1443    522466   2152   \n",
              "4    2022-04-02 14:46:20+00:00   38150247    6556       1443    522466    355   \n",
              "...                        ...        ...     ...        ...       ...    ...   \n",
              "3199 2018-01-19 17:38:58+00:00   38150247    6556       1443    522466      2   \n",
              "3200 2018-01-19 16:27:11+00:00   38150247    6556       1443    522466     35   \n",
              "3201 2018-01-19 10:09:16+00:00   38150247    6556       1443    522466     18   \n",
              "3202 2018-01-18 17:28:45+00:00   38150247    6556       1443    522466      6   \n",
              "3203 2018-01-18 11:33:26+00:00   38150247    6556       1443    522466    206   \n",
              "\n",
              "      Retweets  \n",
              "0          214  \n",
              "1         1130  \n",
              "2          704  \n",
              "3          185  \n",
              "4           39  \n",
              "...        ...  \n",
              "3199         2  \n",
              "3200        11  \n",
              "3201        10  \n",
              "3202         3  \n",
              "3203        16  \n",
              "\n",
              "[3204 rows x 9 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-974a0abd-cc91-4271-8d57-39457b5e08cd\">\n",
              "    <div class=\"colab-df-container\">\n",
              "      <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>id</th>\n",
              "      <th>text</th>\n",
              "      <th>Date</th>\n",
              "      <th>author.id</th>\n",
              "      <th>status</th>\n",
              "      <th>following</th>\n",
              "      <th>follower</th>\n",
              "      <th>Likes</th>\n",
              "      <th>Retweets</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1511734556621217792</td>\n",
              "      <td>Der russische Präsident hat sich verrechnet – ...</td>\n",
              "      <td>2022-04-06 15:56:19+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>1631</td>\n",
              "      <td>214</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1510735727587377156</td>\n",
              "      <td>Furchtbare und grauenerregende Aufnahmen errei...</td>\n",
              "      <td>2022-04-03 21:47:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>8415</td>\n",
              "      <td>1130</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1510735703139053568</td>\n",
              "      <td>Ich verlange, dass internationale Organisation...</td>\n",
              "      <td>2022-04-03 21:47:14+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>7574</td>\n",
              "      <td>704</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1510273394448732161</td>\n",
              "      <td>Die steigenden Energiepreise sind auch für die...</td>\n",
              "      <td>2022-04-02 15:10:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2152</td>\n",
              "      <td>185</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1510267392257056777</td>\n",
              "      <td>Hey #NRW, lasst uns gemeinsam das Morgen gewin...</td>\n",
              "      <td>2022-04-02 14:46:20+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>355</td>\n",
              "      <td>39</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3199</th>\n",
              "      <td>954407851425968128</td>\n",
              "      <td>Weiter geht’s mit: Andreas Dressel (SPD-Frakti...</td>\n",
              "      <td>2018-01-19 17:38:58+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>2</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3200</th>\n",
              "      <td>954389784729878528</td>\n",
              "      <td>Heute waren Berlins Regierender Bürgermeister ...</td>\n",
              "      <td>2018-01-19 16:27:11+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>35</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3201</th>\n",
              "      <td>954294681172611074</td>\n",
              "      <td>Impressed by #Hamburg and @olafscholz ambition...</td>\n",
              "      <td>2018-01-19 10:09:16+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>18</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3202</th>\n",
              "      <td>954042890493276167</td>\n",
              "      <td>Bürgermeister @OlafScholz besucht Müllverwertu...</td>\n",
              "      <td>2018-01-18 17:28:45+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>6</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3203</th>\n",
              "      <td>953953476056403968</td>\n",
              "      <td>Winterliche Grüße vom Rathausmarkt\\n\\n#Schneei...</td>\n",
              "      <td>2018-01-18 11:33:26+00:00</td>\n",
              "      <td>38150247</td>\n",
              "      <td>6556</td>\n",
              "      <td>1443</td>\n",
              "      <td>522466</td>\n",
              "      <td>206</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>3204 rows × 9 columns</p>\n",
              "</div>\n",
              "      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-974a0abd-cc91-4271-8d57-39457b5e08cd')\"\n",
              "              title=\"Convert this dataframe to an interactive table.\"\n",
              "              style=\"display:none;\">\n",
              "        \n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "       width=\"24px\">\n",
              "    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n",
              "    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n",
              "  </svg>\n",
              "      </button>\n",
              "      \n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      flex-wrap:wrap;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "      <script>\n",
              "        const buttonEl =\n",
              "          document.querySelector('#df-974a0abd-cc91-4271-8d57-39457b5e08cd button.colab-df-convert');\n",
              "        buttonEl.style.display =\n",
              "          google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "        async function convertToInteractive(key) {\n",
              "          const element = document.querySelector('#df-974a0abd-cc91-4271-8d57-39457b5e08cd');\n",
              "          const dataTable =\n",
              "            await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                     [key], {});\n",
              "          if (!dataTable) return;\n",
              "\n",
              "          const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "            + ' to learn more about interactive tables.';\n",
              "          element.innerHTML = '';\n",
              "          dataTable['output_type'] = 'display_data';\n",
              "          await google.colab.output.renderOutput(dataTable, element);\n",
              "          const docLink = document.createElement('div');\n",
              "          docLink.innerHTML = docLinkHtml;\n",
              "          element.appendChild(docLink);\n",
              "        }\n",
              "      </script>\n",
              "    </div>\n",
              "  </div>\n",
              "  "
            ]
          },
          "metadata": {},
          "execution_count": 108
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "like_Series = pd.Series(data = df['Likes'].values, index = df['Date'])\n",
        "like_Series.plot(figsize = (16,4), color = 'r')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('No. Of Likes')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "id": "XL2HRNYGFrJZ",
        "outputId": "3d9df6c7-250f-4474-a082-10afc8fb5e39"
      },
      "execution_count": 93,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'No. Of Likes')"
            ]
          },
          "metadata": {},
          "execution_count": 93
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "retweet_Series = pd.Series(data = df['Retweets'].values, index = df['Date'])\n",
        "retweet_Series.plot(figsize = (16,4), color = 'r')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('No. Of Retweets')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "mR0PfaeeGDo5",
        "outputId": "26651501-b634-42b0-a42e-7cb235734bbc"
      },
      "execution_count": 94,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'No. Of Retweets')"
            ]
          },
          "metadata": {},
          "execution_count": 94
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "status_Series = pd.Series(data = df['status'].mean(), index = df['Date'])\n",
        "status_Series.plot(figsize = (16,4), color = 'r')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('No. Of Likes')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        },
        "id": "3hdykRCmGr7Z",
        "outputId": "02a52b40-0054-4db4-f5c2-c026cbbff1f1"
      },
      "execution_count": 115,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'No. Of Likes')"
            ]
          },
          "metadata": {},
          "execution_count": 115
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "following_Series = pd.Series(data = df['following'].values, index = df['Date'])\n",
        "following_Series.plot(figsize = (16,4), color = 'r')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('No. Of Likes')"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 295
        },
        "id": "dcs1mN3oH_I6",
        "outputId": "d4daa552-9b32-4a01-b0b6-a3b3c7f42144"
      },
      "execution_count": 104,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'No. Of Likes')"
            ]
          },
          "metadata": {},
          "execution_count": 104
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "follower_Series = pd.Series(data = df['follower'].values, index = df['Date'])\n",
        "follower_Series.plot(figsize = (16,4), color = 'r')\n",
        "plt.xlabel('Date')\n",
        "plt.ylabel('No. Of Likes')"
      ],
      "metadata": {
        "id": "KDosFcvsIqZp",
        "outputId": "37223026-fe23-4b48-fe1d-30ae0d360ba2",
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 294
        }
      },
      "execution_count": 109,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'No. Of Likes')"
            ]
          },
          "metadata": {},
          "execution_count": 109
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "like_Series = pd.Series(data = df['Likes'].values, index = df['Date'])\n",
        "like_Series.plot(figsize = (16,4), label = 'Likes', legend = True)\n",
        "retweet_Series = pd.Series(data = df['Retweets'].values, index = df['Date'])\n",
        "retweet_Series.plot(figsize = (16,4), label = 'Retweets', legend = True)\n",
        "status_Series = pd.Series(data = df['status'].values, index = df['Date'])\n",
        "status_Series.plot(figsize = (16,4), label = 'Status', legend = True)\n",
        "following_Series = pd.Series(data = df['following'].values, index = df['Date'])\n",
        "following_Series.plot(figsize = (16,4), label = 'following', legend = True)\n",
        "follower_Series = pd.Series(data = df['follower'].values, index = df['Date'])\n",
        "follower_Series.plot(figsize = (16,4), label = 'follower', legend = True)\n",
        "\n",
        "plt.show()"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 277
        },
        "id": "ZY2fx0wGGO1Z",
        "outputId": "54fc1c21-1fda-4707-a1f6-739162eda24c"
      },
      "execution_count": 110,
      "outputs": [
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1152x288 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {
            "needs_background": "light"
          }
        }
      ]
    }
  ]
}